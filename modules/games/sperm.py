from botpackage import *
import aiogram.utils.exceptions

SPERM = {}


def load_sperm():
    global SPERM
    try:
        with open('files/sperm.txt', 'r', encoding='utf-8') as f:
            SPERM = json.load(f)
        SPERM = {int(k): v for k, v in SPERM.items()}
        log.info('SPERM –∑–∞–≥—Ä—É–∂–µ–Ω–æ')
    except Exception as err:
        log.exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ SPERM')


def save_sperm():
    try:
        with open('files/sperm.txt', 'w', encoding='utf-8') as f:
            json.dump(SPERM, f, ensure_ascii=False, indent=4)
    except Exception as err:
        log.exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ SPERM')


@dp.message_handler(commands=['gets'])
async def com_gets(msg):
    if msg.reply_to_message:
        id = msg.reply_to_message.from_user.id
        if id not in SPERM:
            sperm_create_default(msg.reply_to_message)
        text = sperm_get_info_another(id)
    else:
        id = msg.from_user.id
        if id not in SPERM:
            sperm_create_default(msg)
        text = sperm_get_info(id)
    await msg.reply(text)


@dp.message_handler(commands=['shops'])
async def com_shops(msg):
    id = msg.from_user.id
    if id not in SPERM:
        sperm_create_default(msg)
    text = sperm_get_shop(id)
    await msg.reply(text, reply_markup=sperm_get_keyboard(id))


@dp.callback_query_handler(Text(startswith='sperm,'))
async def callback_sperm(call):
    if call.data.split(',')[1] == 'lvlup_power':
        id = int(call.data.split(',')[2])
        if id == call.from_user.id and SPERM[id]['power_level'] < 40:
            if SPERM[id]['bak'] >= sperm_get_price_power(id):
                SPERM[id]['bak'] -= sperm_get_price_power(id)
                SPERM[id]['bak'] = round(SPERM[id]['bak'], 2)
                SPERM[id]['power_level'] += 1
                save_sperm()
                await call.answer('–í—ã —É–≤–µ–ª–∏—á–∏–ª–∏ —Å–∏–ª—É dro4–∫–∏!!! ü§©')
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                            text=sperm_get_shop(id), reply_markup=sperm_get_keyboard(id))
            else:
                await call.answer('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–ø–µ—Ä–º—ã! üò°')
    elif call.data.split(',')[1] == 'lvlup_time':
        id = int(call.data.split(',')[2])
        if id == call.from_user.id and SPERM[id]['power_level'] < 40:
            if SPERM[id]['bak'] >= sperm_get_price_time(id):
                SPERM[id]['bak'] -= sperm_get_price_time(id)
                SPERM[id]['bak'] = round(SPERM[id]['bak'], 2)
                SPERM[id]['time_level'] += 1
                save_sperm()
                await call.answer('–í—ã —É–∫—Ä–µ–ø–∏–ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ dro4–∏—Ç—å —á–∞—â–µ!!!!! ü§©')
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=sperm_get_shop(id), reply_markup=sperm_get_keyboard(id))
            else:
                await call.answer('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–ø–µ—Ä–º—ã! üò°')
    elif call.data.split(',')[1] == 'lvlup_rate':
        id = int(call.data.split(',')[2])
        if id == call.from_user.id and SPERM[id]['rate_level'] < 10:
            if SPERM[id]['exp'] >= sperm_get_price_rate(id):
                SPERM[id]['exp'] -= sperm_get_price_rate(id)
                SPERM[id]['exp'] = round(SPERM[id]['exp'], 2)
                SPERM[id]['rate_level'] += 1
                save_sperm()
                await call.answer('–£ –≤–∞—Å —É–≤–µ–ª–∏—á–∏–ª–∏—Å—å —è–π—Ü–∞, –≤—ã —Å—Ç–∞–ª–∏ –∫—Ä—É—á–µ üòéüòéüòéüòé')
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=sperm_get_shop(id), reply_markup=sperm_get_keyboard(id))
            else:
                await call.answer('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–ø—ã—Ç–∞! üòí')
    elif call.data.split(',')[1] == 'lvlup_skill':
        id = int(call.data.split(',')[2])
        if id == call.from_user.id and SPERM[id]['skill_level'] < 40:
            if SPERM[id]['exp'] >= sperm_get_price_skill(id):
                SPERM[id]['exp'] -= sperm_get_price_skill(id)
                SPERM[id]['exp'] = round(SPERM[id]['exp'], 2)
                SPERM[id]['skill_level'] += 1
                save_sperm()
                await call.answer('–í—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ—ë –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ, –º–∞—Å—Ç–µ—Ä üôèüôè')
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=sperm_get_shop(id), reply_markup=sperm_get_keyboard(id))
            else:
                await call.answer('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–ø—ã—Ç–∞! üòí')
    elif call.data.split(',')[1] == 'update':
        id = int(call.data.split(',')[2])
        await call.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ üê∏')
        try:
            await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                            text=sperm_get_shop(id), reply_markup=sperm_get_keyboard(id))
        except aiogram.utils.exceptions.MessageNotModified:
            pass


def sperm_get_keyboard(id):
    keyboard = types.InlineKeyboardMarkup()
    if SPERM[id]['power_level'] < 40:
        button = types.InlineKeyboardButton(text=f'LvLUP –¥—Ä–æ—á–∫–∞ ({sperm_get_price_power(id)}–º–ª ü•õ)', callback_data=f'sperm,lvlup_power,{id}')
        keyboard.add(button)
    if SPERM[id]['time_level'] < 40:
        button = types.InlineKeyboardButton(text=f'LvLUP –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å ({sperm_get_price_time(id)}–º–ª ü•õ)', callback_data=f'sperm,lvlup_time,{id}')
        keyboard.add(button)
    if SPERM[id]['rate_level'] < 10:
        button = types.InlineKeyboardButton(text=f'LvLUP —è–π—Ü–∞ ({sperm_get_price_rate(id)}exp üåÄ)', callback_data=f'sperm,lvlup_rate,{id}')
        keyboard.add(button)
    if SPERM[id]['skill_level'] < 40:
        button = types.InlineKeyboardButton(text=f'LvLUP –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ ({sperm_get_price_skill(id)}exp üåÄ)', callback_data=f'sperm,lvlup_skill,{id}')
        keyboard.add(button)
    button = types.InlineKeyboardButton(text=f'–û–±–Ω–æ–≤–∏—Ç—å üîÑ', callback_data=f'sperm,update,{id}')
    keyboard.add(button)
    return keyboard


def sperm_get_shop(id):
    text = f"üçÜ <b>{SPERM[id]['name']}'s dick</b>\n\n" if not SPERM[id][
        'dickname'] else f"<b>{SPERM[id]['dickname']}</b>\n\n"
    text += f"üìè –î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏—Å—å–∫–∏: <b>{SPERM[id]['len']} —Å–º</b>\n" \
            f"üåÄ –û–ø—ã—Ç: <b>{SPERM[id]['exp']} exp</b>\n" \
            f"ü•õ –°–ø–µ—Ä–º–æ–±–∞–∫: <b>{SPERM[id]['bak']} –º–ª</b>\n\n" \
            f"üí™ –£—Ä–æ–≤–µ–Ω—å –¥—Ä–æ—á–∫–∏: <b>{SPERM[id]['power_level']}</b>\n" \
            f"üí™ {':' * (SPERM[id]['power_level'] - 1)}|{'.' * (40 - SPERM[id]['power_level'])}\n" \
            f"üïî –£—Ä–æ–≤–µ–Ω—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: <b>{SPERM[id]['time_level']}</b> <i>({sperm_get_time(id)} –º–∏–Ω)</i>\n" \
            f"üïî {':' * (SPERM[id]['time_level'] - 1)}|{'.' * (40 - SPERM[id]['time_level'])}\n" \
            f"ü•ö –£—Ä–æ–≤–µ–Ω—å —è–∏—Ü: <b>{SPERM[id]['rate_level']}</b>\n" \
            f"ü•ö {':' * (SPERM[id]['rate_level'] - 1)}|{'.' * (10 - SPERM[id]['rate_level'])}\n" \
            f"üöº –£—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞: <b>{SPERM[id]['skill_level']}</b>\n" \
            f"üöº {':' * (SPERM[id]['skill_level'] - 1)}|{'.' * (40 - SPERM[id]['skill_level'])}\n"
    return text


def sperm_get_info(id):
    text = f"üçÜ <b>{SPERM[id]['name']}'s dick</b>\n\n" if not SPERM[id]['dickname'] else f"<b>{SPERM[id]['dickname']}</b>\n\n"
    text += f"üìè –î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏—Å—å–∫–∏: <b>{SPERM[id]['len']} —Å–º</b>\n" \
           f"üåÄ –û–ø—ã—Ç: <b>{SPERM[id]['exp']} exp</b>\n" \
           f"ü•õ –°–ø–µ—Ä–º–æ–±–∞–∫: <b>{SPERM[id]['bak']} –º–ª</b>\n\n" \
           f"üí™ –£—Ä–æ–≤–µ–Ω—å –¥—Ä–æ—á–∫–∏: <b>{SPERM[id]['power_level']}</b>\n" \
           f"üí™ {':'*(SPERM[id]['power_level'] - 1)}|{'.'*(40 - SPERM[id]['power_level'])}\n" \
           f"üïî –£—Ä–æ–≤–µ–Ω—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: <b>{SPERM[id]['time_level']}</b> <i>({sperm_get_time(id)} –º–∏–Ω)</i>\n" \
           f"üïî {':'*(SPERM[id]['time_level'] - 1)}|{'.'*(40 - SPERM[id]['time_level'])}\n" \
           f"ü•ö –£—Ä–æ–≤–µ–Ω—å —è–∏—Ü: <b>{SPERM[id]['rate_level']}</b>\n" \
           f"ü•ö {':'*(SPERM[id]['rate_level'] - 1)}|{'.'*(10 - SPERM[id]['rate_level'])}\n" \
           f"üöº –£—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞: <b>{SPERM[id]['skill_level']}</b>\n" \
           f"üöº {':'*(SPERM[id]['skill_level'] - 1)}|{'.'*(40 - SPERM[id]['skill_level'])}\n" \
           f"üçå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç—É—Ä–±–∞—Ü–∏–π: <b>{SPERM[id]['masturbate_count']}</b>\n" \
           f"üí® –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ CUM—á–µ–π: <b>{SPERM[id]['cum_count']}</b> üí¶\n\n"
    if dt.datetime.fromtimestamp(int(SPERM[id]['time'])) + dt.timedelta(minutes = sperm_get_time(id)) < dt.datetime.now():
        text += f"‚ùóÔ∏è <b>–í—Ä–µ–º—è –ø–æ–¥—Ä–æ—á–∏—Ç—å! /masturbate</b>"
    else:
        time = str(dt.datetime.fromtimestamp(int(SPERM[id]['time'])) + dt.timedelta(minutes = sperm_get_time(id)) - dt.datetime.now())
        time = time[:time.find('.')]
        text += f"‚è≥ <i>–î–æ —Å–ª–µ–¥—É—é—â–µ–π dro4–∫–∏: {time}</i>"
    if SPERM[id]['len'] * 0.8 > 1 and (dt.datetime.fromtimestamp(int(SPERM[id]['cum_time'])) + dt.timedelta(minutes = sperm_get_time(id)) < dt.datetime.now()):
        text += f"\n\n<b>–í—ã –º–æ–∂–µ—Ç–µ –∫–æ–Ω—á–∏—Ç—å /cum</b>\n(–ø–æ—Ç–µ—Ä—è 20% –¥–ª–∏–Ω—ã, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ 10% sperm–æ–±–∞–∫–∞)"
    elif SPERM[id]['len'] * 0.8 > 1:
        time = str(dt.datetime.fromtimestamp(int(SPERM[id]['cum_time'])) + dt.timedelta(
            minutes=sperm_get_time(id)) - dt.datetime.now())
        time = time[:time.find('.')]
        text += f"\n\nüèñ <i>–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–º—à–æ—Ç–∞: {time}</i>"
    else:
        text += f"\n\nü§è –ü–æ–¥—Ä–æ—Å—Ç–∏—Ç–µ –ø–∏—Å—å–∫—É –∏ —Å–º–æ–∂–µ—Ç–µ –∫–æ–Ω—á–∏—Ç—å!"
    if not SPERM[id]['dickname']:
        text += f"\n\n‚úèÔ∏è –° –ø–æ–º–æ—â—å—é 100 –º–ª ü•õ –∏ /rename –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å–≤–æ–π 4le–Ω üëÄ"
    return text


def sperm_get_info_another(id):
    text = f"üçÜ <b>{SPERM[id]['name']}'s dick</b>\n\n" if not SPERM[id][
        'dickname'] else f"<b>{SPERM[id]['dickname']}</b>\n\n"
    text += f"üìè –î–ª–∏–Ω–∞ –ø–∏–ø–∏—Å—å–∫–∏: <b>{SPERM[id]['len']} —Å–º</b>\n" \
           f"üåÄ –û–ø—ã—Ç: <b>{SPERM[id]['exp']} exp</b>\n" \
           f"ü•õ –°–ø–µ—Ä–º–æ–±–∞–∫: <b>{SPERM[id]['bak']} –º–ª</b>\n\n" \
           f"üí™ –£—Ä–æ–≤–µ–Ω—å –¥—Ä–æ—á–∫–∏: <b>{SPERM[id]['power_level']}</b>\n" \
           f"üí™ {':'*(SPERM[id]['power_level'] - 1)}|{'.'*(40 - SPERM[id]['power_level'])}\n" \
           f"üïî –£—Ä–æ–≤–µ–Ω—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: <b>{SPERM[id]['time_level']}</b> <i>({sperm_get_time(id)} –º–∏–Ω)</i>\n" \
           f"üïî {':'*(SPERM[id]['time_level'] - 1)}|{'.'*(40 - SPERM[id]['time_level'])}\n" \
           f"ü•ö –£—Ä–æ–≤–µ–Ω—å —è–∏—Ü: <b>{SPERM[id]['rate_level']}\n</b>" \
           f"ü•ö {':'*(SPERM[id]['rate_level'] - 1)}|{'.'*(10 - SPERM[id]['rate_level'])}\n" \
           f"üöº –£—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞: <b>{SPERM[id]['skill_level']}</b>\n" \
           f"üöº {':'*(SPERM[id]['skill_level'] - 1)}|{'.'*(40 - SPERM[id]['skill_level'])}\n" \
           f"üçå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç—É—Ä–±–∞—Ü–∏–π: <b>{SPERM[id]['masturbate_count']}</b>\n" \
           f"üí® –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ CUM—á–µ–π: <b>{SPERM[id]['cum_count']}</b> üí¶\n\n"
    return text


def sperm_get_price_power(id):
    n = SPERM[id]['power_level'] + 1
    return round(0.5 * n + (n / 10) ** 1.85535, 2)


def sperm_get_price_time(id):
    n = SPERM[id]['time_level'] + 1
    return round(0.25 * n + (n / 7) ** 1.9051, 2)


def sperm_get_price_rate(id):
    n = SPERM[id]['rate_level'] + 1
    return round((9.9259 + 1.5 * n) ** math.e)


def sperm_get_price_skill(id):
    n = SPERM[id]['skill_level'] + 1
    return round(10 + 11 * n + (n / 2) ** 2.003152)


def sperm_get_rate(id):
    return SPERM[id]['rate'] * (1 + 0.1 * SPERM[id]['rate_level'])


def sperm_get_time(id):
    return 30 - SPERM[id]['time_level'] * 0.5


def sperm_get_exp(id):
    rand = rnd.uniform(1 + 0.25 * SPERM[id]['skill_level'], 10 + 0.25 * SPERM[id]['skill_level'])
    return round(sperm_get_rate(id) * rand)


def sperm_get_len(id):
    from_ = 0.05 + 0.05 * SPERM[id]['power_level']
    to_ = 0.5 + 0.1 * SPERM[id]['power_level']
    return round(sperm_get_rate(id) * rnd.uniform(from_, to_), 2)


def sperm_get_random(id):
    n = SPERM[id]['skill_level']
    return rnd.uniform(0, 1) <= (5 + 1.125 * n) / 100


def sperm_create_default(msg):
    global SPERM
    id = msg.from_user.id
    name = msg.from_user.first_name
    SPERM[id] = {
        'name': name,
        'len': 1,
        'bak': 0,
        'exp': 0,
        'dickname': None,
        'time': 0,
        'cum_time': 0,
        'time_level': 0,
        'power_level': 0,
        'skill_level': 0,
        'rate_level': 0,
        'rate': 1,
        'rate_time': 0,
        'cum_count': 0,
        'masturbate_count': 0
    }
    save_sperm()


@dp.message_handler(commands=['cum'])
async def com_cum(msg):
    id = msg.from_user.id
    if dt.datetime.fromtimestamp(int(SPERM[id]['cum_time'])) + dt.timedelta(
            minutes=sperm_get_time(id)) < dt.datetime.now():
        if SPERM[id]['len'] * 0.8 > 1:
            SPERM[id]['cum_time'] = dt.datetime.timestamp(dt.datetime.now())
            tominus = round(SPERM[id]['len'] * 0.2, 2)
            if not(sperm_get_random(id)):
                toadd = round(sperm_get_rate(id) * SPERM[id]['len'] * 0.2 * 0.5, 2)
                SPERM[id]['len'] = round(SPERM[id]['len'] * 0.8, 2)
                SPERM[id]['bak'] += toadd
                SPERM[id]['bak'] = round(SPERM[id]['bak'], 2)
                await msg.reply(
                    f'üò≤üò≤üò≤ <b>–í–´ –ö–û–ù–ß–ò–õ–ò!!!!</b> üí¶üí¶üí¶\n\n<b>+{toadd} –º–ª</b> –≤ sperm–æ–±–∞–∫ ü•õ\n'
                    f'–í—Å–µ–≥–æ: <b>{SPERM[id]["bak"]} –º–ª</b>\n\n'
                    f'–û—Å—Ç–∞–≤—à–∞—è—Å—è –¥–ª–∏–Ω–∞ –ø–∏—Å—é–Ω—á–∏–∫–∞: <b>{SPERM[id]["len"]} —Å–º</b> (-{tominus}—Å–º)',
                disable_notification=True)
            else:
                toadd = round(2 * sperm_get_rate(id) * SPERM[id]['len'] * 0.2 * 0.5, 2)
                SPERM[id]['len'] = round(SPERM[id]['len'] * 0.8, 2)
                SPERM[id]['bak'] += toadd
                SPERM[id]['bak'] = round(SPERM[id]['bak'], 2)
                await msg.reply(
                    f'üò≤üò≤üò≤ <b>–ú–ï–ì–ê –ö–ê–ú–®–û–¢ –•2!!!!</b> üí¶üí¶üí¶\n<i>–í–∞—à–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø–æ—Ä–∞–∂–∞–µ—Ç!</i>\n<b>+{toadd} –º–ª</b> –≤ sperm–æ–±–∞–∫ ü•õ\n–í—Å–µ–≥–æ: <b>{SPERM[id]["bak"]} –º–ª</b>\n\n–û—Å—Ç–∞–≤—à–∞—è—Å—è –¥–ª–∏–Ω–∞ –ø–∏—Å—é–Ω—á–∏–∫–∞: <b>{SPERM[id]["len"]} —Å–º</b> (-{tominus}—Å–º)',
                disable_notification=True)
            SPERM[id]['cum_count'] += 1
            save_sperm()
        else:
            await msg.reply('ü§èü§èü§è –£ –≤–∞—Å —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π –ø–∏—Å—é–Ω, —á—Ç–æ–±—ã –∫–æ–Ω—á–∏—Ç—å :( —Ö–∞—Ö–∞')
    else:
        time = str(dt.datetime.fromtimestamp(int(SPERM[id]['cum_time'])) + dt.timedelta(
            minutes=sperm_get_time(id)) - dt.datetime.now())
        time = time[:time.find('.')]
        await msg.reply(f"üèñ –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–º—à–æ—Ç–∞: <b>{time}</b>", disable_notification=True)


@dp.message_handler(commands=['masturbate', 'mast'])
async def com_masturbate(msg):
    if msg.reply_to_message and msg.reply_to_message.from_user.id != msg.from_user.id:
        id = msg.reply_to_message.from_user.id
        if id == BOT_ID:
            await msg.reply('–•–µ–µ–µ–µ–π, –Ω–µ –Ω–∞–¥–æ –º–Ω–µ –¥—Ä–æ—á–∏—Ç—å(((( –º–Ω–µ –Ω–æ–ª—å –ª–µ—Ç, –æ–¥—É–º–æ–π—Ç–µ—Å—å üò¢üò¢')
            return
        if id not in SPERM:
            sperm_create_default(msg.reply_to_message)
        if dt.datetime.fromtimestamp(int(SPERM[id]['time'])) + dt.timedelta(minutes=sperm_get_time(id)) < dt.datetime.now():
            SPERM[id]['time'] = dt.datetime.timestamp(dt.datetime.now())
            toadd = sperm_get_len(id)
            SPERM[id]['len'] += toadd
            SPERM[id]['len'] = round(SPERM[id]['len'], 2)
            add_exp = sperm_get_exp(id)
            SPERM[id]['exp'] += add_exp
            SPERM[id]['masturbate_count'] += 1
            SPERM[msg.from_user.id]['exp'] += round(add_exp * 0.2)
            await msg.reply(f"<b>{msg.from_user.first_name}</b> –ø–æ–¥—Ä–æ—á–∏–ª <b>{msg.reply_to_message.from_user.first_name}</b>! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è\n\n"
                            f"üìè –ü–∏—Å—å–∫–∞ <b>{msg.reply_to_message.from_user.first_name}</b> —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ <b>{toadd} —Å–º</b>\n"
                            f"–¢–µ–ø–µ—Ä—å –¥–ª–∏–Ω–∞ —ç—Ç–æ–≥–æ dick'a: <b>{SPERM[id]['len']} —Å–º</b> üëÄ\n\n"
                            f"Also, <b>+{add_exp} exp üåÄ</b> –¥–ª—è <b>{msg.reply_to_message.from_user.first_name}</b> –∏"
                            f" <b>+{round(add_exp * 0.2)} exp üåÄ</b> –¥–ª—è <b>{msg.from_user.first_name}</b>",
                            disable_notification=True)
            if sperm_get_random(id):
                SPERM[id]['bak'] += toadd * 0.5
                SPERM[id]['bak'] = round(SPERM[id]['bak'], 2)
                await msg.reply(f"–í–´ –ó–ê–°–¢–ê–í–ò–õ–ò <b>{msg.reply_to_message.from_user.first_name}</b> –ü–û–¢–ï–ß–¨ –£–§–§–§–§ üí¶üí¶üí¶üí¶\n\n"
                                f"–í—ã, –∫–∞–∫ –∏—Å—Ç–∏–Ω–Ω—ã–π —Ü–µ–Ω–∏—Ç–µ–ª—å dro4–∫–∏, –ø–æ–º–æ–≥–ª–∏ —Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—á—É –≤ –±–∞–Ω–æ—á–∫—É:\n"
                                f"<b>+{round(toadd * 0.5, 2)} –º–ª</b> –≤ spermo–±–∞–∫ ü•õ\n"
                                f"–í—Å–µ–≥–æ: <b>{SPERM[id]['bak']} –º–ª</b>", disable_notification=True)
            save_sperm()
        else:
            time = str(dt.datetime.fromtimestamp(int(SPERM[id]['time'])) + dt.timedelta(
                minutes=sperm_get_time(id)) - dt.datetime.now())
            time = time[:time.find('.')]
            await msg.reply(f"‚è≥ –î–æ —Å–ª–µ–¥—É—é—â–µ–π –¥—Ä–æ—á–∫–∏ –¥–ª—è <b>{msg.reply_to_message.from_user.first_name}</b>: <b>{time}</b>",
                            disable_notification=True)
    else:
        id = msg.from_user.id
        if id not in SPERM:
            sperm_create_default(msg)
        if dt.datetime.fromtimestamp(int(SPERM[id]['time'])) + dt.timedelta(minutes=sperm_get_time(id)) < dt.datetime.now():
            SPERM[id]['time'] = dt.datetime.timestamp(dt.datetime.now())
            toadd = sperm_get_len(id)
            SPERM[id]['len'] += toadd
            SPERM[id]['len'] = round(SPERM[id]['len'], 2)
            add_exp = sperm_get_exp(id)
            SPERM[id]['exp'] += add_exp
            SPERM[id]['masturbate_count'] += 1
            await msg.reply(f"–û—Ö —Ö–æ—Ä–æ—à–æ! üò™\n\nüìè –í–∞—à–∞ –ø–∏—Å—å–∫–∞ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ <b>{toadd} —Å–º</b>\n"
                            f"‚ù§Ô∏è –¢–µ–ø–µ—Ä—å –¥–ª–∏–Ω–∞ –≤–∞—à–µ–≥–æ 4le–Ω–∞: <b>{SPERM[id]['len']} —Å–º\n\n</b>"
                            f"Also, <b>+{add_exp} exp</b> üåÄ", disable_notification=True)
            if sperm_get_random(id):
                SPERM[id]['bak'] += toadd * 0.5
                SPERM[id]['bak'] = round(SPERM[id]['bak'], 2)
                await msg.reply(f"–í—ã –ø–æ—Ç–µ–∫–ª–∏ üí¶üí¶üò¢\n\n"
                                f"–ù–æ —ç—Ç–æ –¥–∞–∂–µ —Ö–æ—Ä–æ—à–æ! –í—ã –Ω–µ–º–Ω–æ–≥–æ, –∫–æ–Ω–µ—á–Ω–æ, —Å–ª—É—á–∞–π–Ω–æ, –∫–æ–Ω—á–∏–ª–∏:\n"
                                f"<b>+{round(toadd * 0.4, 2)} –º–ª</b> –≤ spermo–±–∞–∫ ü•õ\n"
                                f"–í—Å–µ–≥–æ: <b>{SPERM[id]['bak']} –º–ª</b>", disable_notification=True)
            save_sperm()
        else:
            time = str(dt.datetime.fromtimestamp(int(SPERM[id]['time'])) + dt.timedelta(
                minutes=sperm_get_time(id)) - dt.datetime.now())
            time = time[:time.find('.')]
            await msg.reply(f"‚è≥ –î–æ —Å–ª–µ–¥—É—é—â–µ–π –¥—Ä–æ—á–∫–∏: <b>{time}</b>", disable_notification=True)


@dp.message_handler(commands=['tops'])
async def com_tops(msg):
    await msg.reply(sperm_get_top())


@dp.message_handler(commands=['helps'])
async def com_helps(msg):
    text = f"<b>–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –º–æ–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –ª—é–±–∏—Ç–µ–ª–∏ –≤–∑–¥—ë—Ä–Ω—É—Ç—å —Å–≤–æ–π –øi—Å—é</b> ü•∫\n" \
           f"–î–∞–≤–∞–π—Ç–µ —É—Å–≤–æ–∏–º —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—É—é <u>–±–∞–∑—É</u> –ø–æ –ø–æ–≤–æ–¥—É dro4–∫–∏\n\n" \
           f"<b>‚Ä¢ –ü–µ—Ä–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –Ω–∏–∫–æ–º—É –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –∫–ª—É–±–µ –¥—Ä–æ—á–∫–∏. ... –•–æ—Ç—è, –µ—Å–ª–∏ –≤—ã —ç—Ç–æ —á–∏—Ç–∞–µ—Ç–µ, —Ç–æ —Å–∫–æ—Ä–µ–µ " \
           f"–≤—Å–µ–≥–æ, —ç—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞—Ä—É—à–µ–Ω–æ - –Ω—É –∏ –Ω–∞–ö–û–ù–ß–ê—Ç—å –Ω–∞ –Ω–µ–≥–æ\n\n" \
           f"<b>‚Ä¢ –í—Ç–æ—Ä–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –¥—Ä–æ—á–∏—Ç—å is good üòâ. –°–∞–º–æ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–π—Ç–µ —Å–µ–±—è /masturbate –∏ –¥—Ä—É–≥–∏—Ö (/masturbate " \
           f"–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø–ædo–ø–µ4–Ω–æ–≥–æ) - –æ–Ω–∏ –≤–∞–º –±—É–¥—É—Ç –æ–ö–û–ù–ß–ê—Ç–µ–ª—å–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã ‚ò∫Ô∏è\n\n" \
           f"<b>‚Ä¢ –¢—Ä–µ—Ç—å–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ (–Ω—É –º—ã –∂–µ —Å –≤–∞–º–∏ –Ω–µ –º–æ–Ω—Å—Ç—Ä—ã, –∫–æ—Ç—è—Ç–∫–∏) " \
           f"–ö–û–ù–ß–ê—Ç—å /cum ü•õü•õü•õ. –¢–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ —Å–æ–±–∏—Ä–∞—Ç—å —Å–≤–æ–∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ç—Ö–æ–¥—ã –≤ —É–∫—Ä–æ–º–Ω–æ–µ –º–µ—Å—Ç–æ ü§≠\n\n" \
           f"<b>‚Ä¢ –ß–µ—Ç–≤—ë—Ä—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –æ–±–º–∞–∑—ã–≤–∞—Ç—å —Å–≤–æ–π 4len —Å–ø–µ—Ä–º–∞—Ç–æ–∑–æ–∏–¥–∞–º–∏ (—Å–≤–æ–∏–º–∏, –º—ã –∂–µ –Ω–µ –¥–∏–∫–∞—Ä–∏ –∫–∞–∫–∏–µ-—Ç–æ). " \
           f"–¢–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–±—É–¥–∏—Ç—å —Å–≤–æ—ë –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –Ω–∞—á–∞–ª–æ /shops –∏ —Å–¥–µ–ª–∞—Ç—å –¥—Ä–æ4–∫—É –±–æ–ª–µ–µ –ø—Ä–∏—è—Ç–Ω–æ–π ü•µ\n" \
           f"–¢–∞–∫–∏–µ —Ä–∏—Ç—É–∞–ª—ã —Å–º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤–∞—Å –∫ –ª—É—á—à–µ–π –ø–æ—Ç–µ–Ω—Ü–∏–∏ (<i>aka '—Å–∏–ª–∞ –¥—Ä–æ—á–∫–∏', —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —á–ª–µ–Ω–∏–∫–∞ –∑–∞ " \
           f"–∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å</i>), –∞ —Ç–∞–∫–∂–µ –ø–æ–≤—ã—Å–∏—Ç—å –≤–∞—à—É –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å (<i>aka '–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å', —É–º–µ–Ω—å—à–∞–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É " \
           f"–º–µ–∂–¥—É –∞–∫—Ç–∞–º–∏ –º–∞—Å—Ç—É—Ä–±–∞—Ü–∏–∏</i>)\n\n" \
           f"<b>‚Ä¢ –ü—è—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - take your experience üåÄ, bro. –ú—ã –∂–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –¥—ë—Ä–≥–∞–µ–º –ø–∏—Å—é, –ø—Ä–∞–≤–¥–∞? " \
           f"–ö–∞–∂–¥–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–ædro4i—Ç—å –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞—Å –Ω–∞ –ø—É—Ç—å –∏—Å—Ç–∏–Ω—ã üôèüôè\n\n" \
           f"<b>‚Ä¢ –®–µ—Å—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –∏—Å–ø–æ–ª—å–∑—É–π –æ–ø—ã—Ç —Å —É–º–æ–º ü•∏. –¢—ã –º–æ–∂–µ—à—å –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å–≤–æ–µ–π –ø–∏—Å–∏, " \
           f"—á—Ç–æ–±—ã –Ω–∞–≥–∏–±–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã—Ö /shops. –ü–æ–≤—ã—à–∞–π —Å–≤–æ—ë –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ, dungeon master (<i>aka '–º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ', —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç " \
           f"–ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –∏ –ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –ø—Ä–∏—è—Ç–Ω–µ–π—à–∏—Ö —Å–æ–±—ã—Ç–∏–π</i>) –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π —Å–≤–æ–∏ ü•ö balls ü•ö, —á—Ç–æ–±—ã –±—ã—Ç—å —Ç–æ–ø 1 " \
           f"(<i>aka '—è–π—Ü–∞', —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Ç 1 –¥–æ 2, –∫–æ—Ç–æ—Ä—ã–π —É—Å–∏–ª–∏–≤–∞–µ—Ç –±—É–∫–≤–∞–ª—å–Ω–æ –≤—Å—ë, —á—Ç–æ –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å</i>)\n\n" \
           f"<b>‚Ä¢ –°–µ–¥—å–º–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –Ω–∞–≥—Ä–∞–¥–∏ —Å–µ–±—è –∏ –ø–æ–¥—Ä–æ—á–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã —ç—Ç–æ –∑–∞—Å–ª—É–∂–∏–ª, —Ç–∞–∫ –∫–∞–∫ " \
           f"–¥–æ—á–∏—Ç–∞–ª –∞–∂ –¥–æ —Å—é–¥–∞ ü§ì\n\n" \
           f"<b>‚Ä¢ –í–æ—Å—å–º–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - —Å—Ç–∞—Ä–∞–π—Å—è –±—ã—Ç—å –ø–µ—Ä–≤—ã–º ü•á /tops –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π –±–æ–ª—Ç –¥–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤\n" \
           f"–ù–æ –∫–∞–∫–æ–π 4len –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Ç–æ–ø-1 –±–µ–∑ –∏–º–µ–Ω–∏? –ù–∞–±–µ—Ä–∏—Å—å experience –∏ —É–Ω–∏–∑—å –≤—Å–µ—Ö –ª–∏—á–Ω—ã–º –∏–º–µ–Ω–µ–º –¥–ª—è " \
           f"—Å–≤–æ–µ–π –±–ª–∞–≥–æ—Ä–æ–¥–Ω–æ–π –ø–∏—Å–∏ /rename (–Ω—É —É —Ç–µ–±—è –∏ —à–∏–∑–∞, –±—Ä–∞—Ç)\n\n" \
           f"<b>‚Ä¢ –î–µ–≤—è—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - —á—Ç–æ–±—ã –±—ã—Ç—å —Ç–æ–ø-1, –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –≤ –ª–∏—Ü–æ üòë. /gets –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ " \
           f"—Ä–∞—Å—Å–∫–∞–∂–µ—Ç —Ç–µ–±–µ –æ –Ω—ë–º –æ—á–µ–Ω—å –º–Ω–æ–≥–æ–µ. –ü—Ä–æ —Å–µ–±—è —Ç–æ–∂–µ –Ω–µ –∑–∞–±—ã–≤–∞–π, –º–æ–π —é–Ω—ã–π –¥—Ä–æ—á–µ—Ä /gets\n\n" \
           f"<b>‚Ä¢ –î–µ—Å—è—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ</b> –∫–ª—É–±–∞ –¥—Ä–æ—á–∫–∏ - –¥—Ä–æ—á–∏—Ç–µ —Å–µ–±–µ –ª—é–±–∏–º–æ–º—É –∏ –¥—Ä—É–≥–∏–º –ª—é–±–∏–º—ã–º ü•∞ü•∞ü•∞, —Ç–∞–∫ –≤—ã –Ω–∞–±–µ—Ä—ë—Ç–µ—Å—å –±–æ–ª—å—à–µ –æ–ø—ã—Ç–∞ –∏ " \
           f"–ø—Ä–∏—è—Ç–Ω–µ–π—à–∏—Ö —ç–º–æ—Ü–∏–π\n\n" \
           f"Dro4ka - –Ω–∞—à–µ –≤—Å—ë! üí™"
    await msg.reply(text)


def sperm_get_top():
    global SPERM
    top = []
    for id, val in SPERM.items():
        top.append((val['dickname'] if val['dickname'] else f"{val['name']}'s dick", val['len']))
    top = sorted(top, key=lambda x: x[1], reverse=True)[:10]
    text = f"ü•≥ <b>–ú–µ–≥–∞ —Ç–æ–ø –ø–∏–ø–∏—Å–µ–∫</b>:\n"
    for i, person in enumerate(top):
        text += f"\n{i + 1}) <b>{person[0]}</b> ‚Äî {person[1]} —Å–º"
    return text


@dp.message_handler(commands=['rename'])
async def com_rename(msg):
    if msg.reply_to_message:
        id = msg.from_user.id
        if SPERM[id]['bak'] >= 100:
            SPERM[id]['bak'] -= 100
            SPERM[id]['dickname'] = msg.reply_to_message.text
            save_sperm()
            await msg.reply(f"–£—Ä–∞, –≤—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ —Å–≤–æ–π dick –≤: <b>{msg.reply_to_message.text}</b> üëÄ\n\n–ß—É–¥–µ—Å–Ω–æ–µ –∏–º—è! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è")
        else:
            await msg.reply(f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç sperm—ã! –î—Ä–æ—á–∏—Ç–µ –ª—É—á—à–µ üò™")
    else:
        await msg.reply(f"–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤–∞—à–µ–≥–æ dick'a, —á—Ç–æ–±—ã –¥–∞—Ç—å –µ–º—É –∏–º—è üëÄ\n<b>–°—Ç–æ–∏–º–æ—Å—Ç—å - 100–º–ª sperm—ã ü•õ</b>")


load_sperm()
log.info('–ú–æ–¥—É–ª—å sperm –∑–∞–≥—Ä—É–∂–µ–Ω')